# version: '3.8'

networks:
  backend-network:
    driver: bridge

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_database
    restart: unless-stopped
    ports:
      - "27017:27017"
    env_file:
      - ./env/db_env/db.env
    volumes:
      - ./mongo-data:/data/db
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mongosh", "--username", "$MONGO_INITDB_ROOT_USERNAME", "--password", "$MONGO_INITDB_ROOT_PASSWORD", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 1m

  backend:
    build:
      context: ./backend/api
    container_name: backend_api
    restart: unless-stopped
    ports:
      - "3005:3005"
    env_file:
      - ./env/backend_env/api_env/api.env
    volumes:
      - ./backend/api:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - backend-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "node"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 1m

  frontend:
    build:
      context: ./frontend/rental-ui
    container_name: frontend
    restart: unless-stopped
    ports: 
      - "4200:4200"
    environment:
      - CHOKIDAR_USEPOLLING=true # Helps with live reloading inside Docker
    # TODO: Check if can made live reload when have changes on file
    volumes:
      - ./frontend/rental-ui:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - backend-network
    depends_on:
      mongodb:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 1m